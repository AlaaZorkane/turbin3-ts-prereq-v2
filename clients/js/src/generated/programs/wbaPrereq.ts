/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  fixEncoderSize,
  getBytesEncoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/web3.js';
import {
  type ParsedCompleteInstruction,
  type ParsedUpdateInstruction,
} from '../instructions';

export const WBA_PREREQ_PROGRAM_ADDRESS =
  'WBAQSygkwMox2VuWKU133NxFrpDZUBdvSBeaBEue2Jq' as Address<'WBAQSygkwMox2VuWKU133NxFrpDZUBdvSBeaBEue2Jq'>;

export enum WbaPrereqAccount {
  Q2Prereq2024,
}

export function identifyWbaPrereqAccount(
  account: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): WbaPrereqAccount {
  const data = 'data' in account ? account.data : account;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([210, 203, 168, 103, 251, 233, 204, 6])
      ),
      0
    )
  ) {
    return WbaPrereqAccount.Q2Prereq2024;
  }
  throw new Error(
    'The provided account could not be identified as a wbaPrereq account.'
  );
}

export enum WbaPrereqInstruction {
  Complete,
  Update,
}

export function identifyWbaPrereqInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): WbaPrereqInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([0, 77, 224, 147, 136, 25, 88, 76])
      ),
      0
    )
  ) {
    return WbaPrereqInstruction.Complete;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([219, 200, 88, 176, 158, 63, 253, 127])
      ),
      0
    )
  ) {
    return WbaPrereqInstruction.Update;
  }
  throw new Error(
    'The provided instruction could not be identified as a wbaPrereq instruction.'
  );
}

export type ParsedWbaPrereqInstruction<
  TProgram extends string = 'WBAQSygkwMox2VuWKU133NxFrpDZUBdvSBeaBEue2Jq',
> =
  | ({
      instructionType: WbaPrereqInstruction.Complete;
    } & ParsedCompleteInstruction<TProgram>)
  | ({
      instructionType: WbaPrereqInstruction.Update;
    } & ParsedUpdateInstruction<TProgram>);
